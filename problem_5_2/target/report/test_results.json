{"projectName":"problem_5_2","totalTests":1,"passed":1,"failed":0,"skipped":0,"coveredLines":60,"missedLines":11,"coveragePercentage":84.51,"moduleStatus":[{"name":"problem_5_2","totalTests":1,"passed":1,"failed":0,"skipped":0,"tests":[{"name":"testGqlService","status":"PASSED"}]},{"name":"problem_5_2.back_ends","totalTests":0,"passed":0,"failed":0,"skipped":0,"tests":[]}],"moduleCoverage":[{"name":"problem_5_2","coveredLines":38,"missedLines":9,"coveragePercentage":80.85,"sourceFiles":[{"name":"service.bal","coveredLines":[8,16,21,25,30,34,37,41,42,43,46,48,51,52,55,56,59,60,63,64,65,66,67,68,69,70,71,73,74,75,81,82,88,89,91,93,94,95],"missedLines":[44,49,53,57,61,78,84,85,86],"coveragePercentage":80.85,"sourceCode":"import ballerina/graphql;\nimport ballerina/http;\n\ntype ActivityData record {\n    readonly string date;\n    int steps;\n    Heart heart;\n};\n\ntype Heart record {\n    int min;\n    int max;\n    float caloriesOut;\n    int minutes;\n    string name;\n};\n\ntype StepRespone record {\n    string? date;\n    int steps;\n};\n\ntype StepResponseArray record {\n    StepRespone[] activity;\n};\n\ntype HeartResponse record {\n    string? date;\n    Heart heart;\n};\n\ntype HeartResponseArray record {\n    HeartResponse[] activity;\n};\n\n// Don\u0027t change the port number\nservice /graphql on new graphql:Listener(9090) {\n\n    // Write your answer here. You must change the input and\n    // the output of the below signature along with the logic.\n    resource function get activity(string ID) returns ActivityDetails[] {\n        http:Client|error fitfitEp \u003d new (\"http://localhost:9091\");\n        if (fitfitEp is error) {\n            return [];\n        }\n        json|error stepResponse \u003d fitfitEp-\u003eget(\"/activities/v2/steps/user/1\");\n\n        if (stepResponse is error) {\n            return [];\n        }\n        json|error heartResponse \u003d fitfitEp-\u003eget(\"/activities/v2/heart/user/1\");\n        if (heartResponse is error) {\n            return [];\n        }\n        StepResponseArray|error stepData \u003d stepResponse.cloneWithType(StepResponseArray);\n        if (stepData is error) {\n            return [];\n        }\n        HeartResponseArray|error heartData \u003d heartResponse.cloneWithType(HeartResponseArray);\n        if (heartData is error) {\n            return [];\n        }\n        ActivityData[] dataTable \u003d from StepRespone d1 in stepData.activity\n            join HeartResponse d2 in heartData.activity\n                                on d1.date equals d2.date\n            where d1.date !\u003d () \u0026\u0026 d2.date !\u003d ()\n            select {\n                date: \u003cstring\u003ed1.date,\n                steps: d1.steps,\n                heart: {min: d2.heart.min, max: d2.heart.max, caloriesOut: d2.heart.caloriesOut, minutes: d2.heart.minutes, name: d2.heart.name}\n        };\n\n        return dataTable.map(entry \u003d\u003e new ActivityDetails(entry));\n    }\n}\n\nservice class ActivityDetails {\n    private final readonly \u0026 ActivityData entryRecord;\n\n    function init(ActivityData entryRecord) {\n        self.entryRecord \u003d entryRecord.cloneReadOnly();\n    }\n\n    resource function get date() returns string {\n        return self.entryRecord.date;\n    }\n\n    resource function get steps() returns int {\n        return self.entryRecord.steps;\n\n    }\n\n    resource function get heart() returns Heart {\n        return self.entryRecord.heart;\n    }\n}\n"}]},{"name":"problem_5_2.back_ends","coveredLines":22,"missedLines":2,"coveragePercentage":91.67,"sourceFiles":[{"name":"fitfit_activity_api.bal","coveredLines":[8,11,12,14,15,16,17,19,20,24,25,27,29,30,31,32,34,35,39,40,42,43],"missedLines":[21,36],"coveragePercentage":91.67,"sourceCode":"import ballerina/log;\nimport ballerina/os;\nimport ballerina/io;\nimport ballerina/http;\n\nconfigurable int activity_port \u003d 9091;\n\nservice /activities/v2 on new http:Listener(activity_port) {\n\n    function init() {\n        log:printInfo(\"Started Fifit activity API\", host \u003d \"0.0.0.0\", port \u003d activity_port);\n    }\n    \n    resource function get steps/user/[string id]() returns json|error {\n        string dataSource \u003d os:getEnv(\"DATA_SOURCE\");\n        if dataSource \u003d\u003d \"\" {\n            dataSource \u003d \"tests/resources/data.json\";\n        }\n        json|io:Error data \u003d io:fileReadJson(dataSource);\n        if data is io:Error {\n            return error(\"Failed to load data\");\n        }\n        \n        return {\n            \"activity\": check data.stepsActivity\n        };\n    }\n\n    resource function get heart/user/[string id]() returns json|error {\n        string dataSource \u003d os:getEnv(\"DATA_SOURCE\");\n        if dataSource \u003d\u003d \"\" {\n            dataSource \u003d \"tests/resources/data.json\";\n        }\n        json|io:Error data \u003d io:fileReadJson(dataSource);\n        if data is io:Error {\n            return error(\"Failed to load data\");\n        }\n        \n        return {\n            \"activity\": check data.heartActivity\n        };\n    }\n}\n"}]}]}