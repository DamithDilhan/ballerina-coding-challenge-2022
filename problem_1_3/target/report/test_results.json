{"projectName":"problem_1_3","totalTests":2,"passed":2,"failed":0,"skipped":0,"coveredLines":32,"missedLines":5,"coveragePercentage":86.49,"moduleStatus":[{"name":"problem_1_3","totalTests":2,"passed":2,"failed":0,"skipped":0,"tests":[{"name":"processFuelRecordsTest#0","status":"PASSED"},{"name":"processFuelRecordsTest#1","status":"PASSED"}]}],"moduleCoverage":[{"name":"problem_1_3","coveredLines":32,"missedLines":5,"coveragePercentage":86.49,"sourceFiles":[{"name":"main.bal","coveredLines":[8,14,22,26,27,29,30,32,34,35,37,38,39,40,41,42,43,45,46,47,48,53,54,55,56,57,61,62,63,65,66,67],"missedLines":[69,70,71,73,74],"coveragePercentage":86.49,"sourceCode":"import ballerina/io;\n\ntype FillUpEntry record {\n    readonly int employeeId;\n    int odometerReading;\n    decimal gallons;\n    decimal gasPrice;\n};\n\ntype OdemeterRecord record {\n    readonly int employeeId;\n    int prevReading;\n    int curReading;\n};\n\ntype EmployeeFillUpSummary record {\n    readonly int employeeId;\n    int gasFillUpCount;\n    decimal totalFuelCost;\n    decimal totalGallons;\n    int totalMilesAccrued;\n};\n\nfunction processFuelRecords(string inputFilePath, string outputFilePath) returns error? {\n    // Write your code here\n    json jsonPayload \u003d check io:fileReadJson(inputFilePath);\n    FillUpEntry[] entries \u003d check jsonPayload.cloneWithType();\n\n    table\u003cEmployeeFillUpSummary\u003e key(employeeId) tbl \u003d table [];\n    table\u003cOdemeterRecord\u003e key(employeeId) odeTbl \u003d table [];\n\n    foreach FillUpEntry item in entries {\n\n        EmployeeFillUpSummary? entry \u003d tbl[item.employeeId];\n        OdemeterRecord? odeEntry \u003d odeTbl[item.employeeId];\n\n        if ((entry \u003d\u003d ()) || (odeEntry \u003d\u003d ())) {\n            tbl.add({\n                employeeId: item.employeeId,\n                gasFillUpCount: 1,\n                totalFuelCost: item.gallons * item.gasPrice,\n                totalGallons: item.gallons,\n                totalMilesAccrued: 0\n            });\n            odeTbl.add({\n                employeeId: item.employeeId,\n                prevReading: item.odometerReading,\n                curReading: item.odometerReading\n            });\n\n        }\n        else {\n            entry.gasFillUpCount +\u003d 1;\n            entry.totalFuelCost +\u003d item.gallons * item.gasPrice;\n            entry.totalGallons +\u003d item.gallons;\n            odeEntry.curReading \u003d item.odometerReading;\n            entry.totalMilesAccrued \u003d (odeEntry.curReading - odeEntry.prevReading);\n        }\n    }\n\n    EmployeeFillUpSummary[] result \u003d from EmployeeFillUpSummary r in tbl\n        order by r.employeeId ascending\n        select r;\n\n    json newPayload \u003d result.toJson();\n    check io:fileWriteJson(outputFilePath, newPayload);\n}\n\npublic function main() {\n    string inputFilepath \u003d \"tests/resources/example02_input.json\";\n    string outputFilePath \u003d \"target/example01_output.json\";\n\n    io:println(processFuelRecords(inputFilepath, outputFilePath));\n}\n\n"}]}]}