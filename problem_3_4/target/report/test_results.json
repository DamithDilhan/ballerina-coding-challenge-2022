{"projectName":"problem_3_4","totalTests":1,"passed":1,"failed":0,"skipped":0,"coveredLines":88,"missedLines":24,"coveragePercentage":78.57,"moduleStatus":[{"name":"problem_3_4","totalTests":1,"passed":1,"failed":0,"skipped":0,"tests":[{"name":"testFindTheGift","status":"PASSED"}]},{"name":"problem_3_4.back_ends","totalTests":0,"passed":0,"failed":0,"skipped":0,"tests":[]}],"moduleCoverage":[{"name":"problem_3_4","coveredLines":41,"missedLines":15,"coveragePercentage":73.21,"sourceFiles":[{"name":"main.bal","coveredLines":[19,20,22,23,24,25,26,27,29,31,34,36,37,38,39,40,41,42,43,44,47,48,49,53,54,55,56,57,58,60,61,62,75,76,77,79,80,86,87,123,124],"missedLines":[32,64,65,67,68,71,72,92,103,104,109,110,136,137,138],"coveragePercentage":73.21,"sourceCode":"import ballerina/http;\n\nimport ballerina/io;\n\nhttp:CircuitBreakerConfig circuitBreakerConfig \u003d {\n                rollingWindow: {\n                    timeWindow: 10,\n                    bucketSize: 2,\n                    requestVolumeThreshold: 0\n\n                },\n                failureThreshold: 0.2,\n                resetTime: 10,\n                // HTTP response status codes that are considered as failures\n                statusCodes: [500]\n};\n\nfunction findTheGift(string userID, string \u0027from, string to) returns Gift|error {\n    string url \u003d string `/steps/user/${userID}/from/${\u0027from}/to/${to}`;\n    final http:Client|error fifitEp \u003d new (\"http://localhost:9091/activities\", {\n            // Retry configuration options.\n            retryConfig: {\n                interval: 3,\n                count: 3,\n                backOffFactor: 1.0,\n                maxWaitInterval: 30,\n                statusCodes: [500]\n            },\n            timeout: 10\n        });\n    if (fifitEp is error) {\n        return fifitEp;\n    }\n    Activities userActivities \u003d check fifitEp-\u003eget(url);\n\n    final http:FailoverClient insureEveryoneEp \u003d check new ({\n                                                            timeout: 10,\n                                                            failoverCodes: [500],\n                                                            interval: 3,\n                                                            retryConfig: {\n                                                                interval: 3,\n                                                                count: 3,\n                                                                backOffFactor: 1.0,\n                                                                maxWaitInterval: 3\n                                                            },\n                                                            // Define a set of HTTP Clients that are targeted for failover.\n                                                            targets: [\n                                                                    {url: \"http://localhost:9092/insurance1\"},\n                                                                    {url: \"http://localhost:9092/insurance2\"}\n                                                                    ]\n                                                });\n\n    json userDetails \u003d check insureEveryoneEp-\u003eget(string `/user/${userID}`);\n    int age \u003d check userDetails.user.age;\n    int totalSteps \u003d userActivities.activities\\-steps.reduce(function(int total, Activity n) returns int {\n        return total + n.value;\n    }, 0);\n    int score \u003d totalSteps / ((100 - age) / 10);\n\n    Types winningType \u003d GOLD;\n    if (score \u003e\u003d SILVER_BAR \u0026\u0026 score \u003c GOLD_BAR) {\n        winningType \u003d SILVER;\n    }\n    else if (score \u003e\u003d GOLD_BAR \u0026\u0026 score \u003c PLATINUM_BAR) {\n        winningType \u003d GOLD;\n    }\n    else if (score \u003e\u003d PLATINUM_BAR) {\n        winningType \u003d PLATINUM;\n    }\n    else {\n        Gift noGift \u003d {eligible: false, \u0027from, to, score: score};\n        return noGift;\n    }\n\n    Gift gift \u003d {eligible: true, \u0027from, to, score: score, details: {\n        \"type\": winningType,\n        \"message\": string `Congratulations! You have won the ${winningType} gift!`\n    }};\n    return gift;\n}\n\ntype Activities record {\n    record {|\n        string date;\n        int value;\n    |}[] activities\\-steps;\n};\n\ntype Activity record {\n    string date;\n    int value;\n};\n\ntype User record {\n    map\u003crecord {\n        string name;\n        string display\\-name;\n        int age;\n        string email;\n        string state;\n        string city;\n        string address;\n    }\u003e user;\n};\n\ntype UserResult record {\n    record {\n        int age;\n    } user;\n};\n\ntype Gift record {\n    boolean eligible;\n    int score;\n    # format yyyy-mm-dd\n    string \u0027from;\n    # format yyyy-mm-dd\n    string to;\n    record {|\n        Types \u0027type;\n        # message string: Congradulations! You have won the ${type} gift!;\n        string message;\n    |} details?;\n};\n\nenum Types {\n    SILVER,\n    GOLD,\n    PLATINUM\n}\n\nconst int SILVER_BAR \u003d 5000;\nconst int GOLD_BAR \u003d 10000;\nconst int PLATINUM_BAR \u003d 20000;\n\npublic function main() {\n    io:println(findTheGift(\"1\", \"2022-01-01\", \"2022-03-31\"));\n}\n"}]},{"name":"problem_3_4.back_ends","coveredLines":47,"missedLines":9,"coveragePercentage":83.93,"sourceFiles":[{"name":"insure_everyone_user_api.bal","coveredLines":[8,10,13,14,16,17,18,19,21,26,28,29,35,36,38,41,42,43,45,46,50,51,53,54],"missedLines":[23,24,30,31,33,47],"coveragePercentage":80.0,"sourceCode":"import ballerina/http;\nimport ballerina/os;\nimport ballerina/io;\nimport ballerina/log;\n\nconfigurable int user_port_eval \u003d 9092;\n\nservice / on new http:Listener(user_port_eval) {\n\n    boolean errorState \u003d true;\n\n    function init() {\n        log:printInfo(\"Insure everyone user API started\", host \u003d \"0.0.0.0\", port \u003d user_port_eval, protocol \u003d \"HTTP\");\n    }\n\n    resource function get insurance1/user/[string userId]() returns json|http:InternalServerError|error {\n        if self.errorState {\n            http:InternalServerError ise \u003d {\n                body: { message: \"Oops! Something went wrong!\"}\n            };\n            return ise;\n        } else {\n            self.errorState \u003d true;\n            return check self.getUserResponse();\n        }\n    }\n\n    resource function get insurance2/user/[string userId]() returns json|http:InternalServerError|error {\n        if !self.errorState {\n            http:InternalServerError ise \u003d {\n                body: { message: \"Oops! Something went wrong!\"}\n            };\n            return ise;\n        } else {\n            self.errorState \u003d false;\n            return check self.getUserResponse();\n        }\n    }\n\n    function getUserResponse() returns json|error {\n        string dataSource \u003d os:getEnv(\"DATA_SOURCE\");\n        if dataSource \u003d\u003d \"\" {\n            dataSource \u003d \"resources/data.json\";\n        }\n        json|io:Error data \u003d io:fileReadJson(dataSource);\n        if data is io:Error {\n            return error(\"Failed to load data\");\n        }\n        \n        return {\n            \"user\": check data.user\n        };\n    }\n}\n"},{"name":"fitfit_steps_api.bal","coveredLines":[9,14,15,16,18,19,20,21,23,24,30,31,34,35,36,37,38,39,40,42,44,47,48],"missedLines":[25,26,45],"coveragePercentage":88.46,"sourceCode":"import ballerina/http;\nimport ballerina/log;\nimport ballerina/io;\nimport ballerina/os;\nimport ballerina/lang.runtime;\n\nconfigurable int steps_port_eval \u003d 9091;\n\nservice /activities on new http:Listener(steps_port_eval) {\n\n    private int count;\n\n    function init() {\n        log:printInfo(\"Fitfit steps API started\", host \u003d \"0.0.0.0\", port \u003d steps_port_eval, protocol \u003d \"HTTP\");\n        self.count \u003d 0;\n    }\n\n    resource function get steps/user/[string id]/\u0027from/[string fromDate]/to/[string toDate]() returns json|http:InternalServerError|error {\n        string dataSource \u003d os:getEnv(\"DATA_SOURCE\");\n        if dataSource \u003d\u003d \"\" {\n            dataSource \u003d \"resources/data.json\";\n        }\n        json|io:Error data \u003d io:fileReadJson(dataSource);\n        if data is io:Error {\n            return \u003chttp:InternalServerError\u003e{\n                body: { message: \"Failed to load data\"}\n            };\n        }\n        \n        json response \u003d {\n            \"activities-steps\": check data.stepsActivity\n        };\n        \n        self.count +\u003d 1;\n        if self.count % 3 \u003d\u003d 0 {\n            self.count \u003d 0;\n            return response;\n        } else if self.count % 2 \u003d\u003d 0  {\n            http:InternalServerError ise \u003d {\n                body: { message: \"Oops! Something went wrong!\"}\n            };\n            return ise;\n        } else {\n            runtime:sleep(40);\n            return response;\n        }\n    }\n}\n"}]}]}