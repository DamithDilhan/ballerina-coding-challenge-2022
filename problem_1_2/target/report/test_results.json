{"projectName":"problem_1_2","totalTests":2,"passed":2,"failed":0,"skipped":0,"coveredLines":31,"missedLines":0,"coveragePercentage":100.0,"moduleStatus":[{"name":"problem_1_2","totalTests":2,"passed":2,"failed":0,"skipped":0,"tests":[{"name":"processFuelRecordsTest#0","status":"PASSED"},{"name":"processFuelRecordsTest#1","status":"PASSED"}]}],"moduleCoverage":[{"name":"problem_1_2","coveredLines":31,"missedLines":0,"coveragePercentage":100.0,"sourceFiles":[{"name":"main.bal","coveredLines":[8,17,21,22,23,24,25,26,27,28,29,30,31,32,33,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53],"missedLines":[],"coveragePercentage":100.0,"sourceCode":"import ballerina/io;\n\ntype Employee record {\n    readonly int employee_id;\n    int odometer_reading;\n    decimal gallons;\n    decimal has_price;\n};\n\ntype FuelUsage record {\n    readonly int employee_id;\n    int gas_fill_up_count;\n    decimal total_fuel_cost;\n    decimal total_gallons;\n    int min_odometer_reading;\n    int max_odometer_reading;\n};\n\nfunction processFuelRecords(string inputFilePath, string outputFilePath) returns error? {\n\n    stream\u003cEmployee, io:Error?\u003e csvStream \u003d check\n                                        io:fileReadCsvAsStream(inputFilePath);\n    table\u003cFuelUsage\u003e key(employee_id) fuelUsage \u003d table [];\n    check csvStream.forEach(function(Employee val) {\n        FuelUsage? entry \u003d fuelUsage[val.employee_id];\n        if (entry \u003d\u003d ()) {\n            fuelUsage.add({\n                employee_id: val.employee_id,\n                gas_fill_up_count: 1,\n                total_fuel_cost: val.gallons * val.has_price,\n                total_gallons: val.gallons,\n                min_odometer_reading: val.odometer_reading,\n                max_odometer_reading: val.odometer_reading\n});\n        }\n        else {\n            entry.gas_fill_up_count +\u003d 1;\n            entry.total_fuel_cost +\u003d (val.gallons * val.has_price);\n            entry.total_gallons +\u003d val.gallons;\n            entry.max_odometer_reading \u003d val.odometer_reading;\n        }\n    });\n    string[][] csvContent \u003d from FuelUsage r in fuelUsage\n        order by r.employee_id ascending\n        select [\n            r.employee_id.toString(),\n            r.gas_fill_up_count.toString(),\n            r.total_fuel_cost.toString(),\n            r.total_gallons.toString(),\n            (r.max_odometer_reading - r.min_odometer_reading).toString()\n        ];\n    check io:fileWriteCsv(outputFilePath, csvContent);\n}\n"}]}]}